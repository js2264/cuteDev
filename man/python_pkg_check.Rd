% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/python_pkg_check.R
\name{python_pkg_check}
\alias{python_pkg_check}
\title{python_pkg_check}
\usage{
python_pkg_check(
  req.package,
  python.exec.path = NULL,
  lib.path = NULL,
  R.lib.path = NULL
)
}
\arguments{
\item{req.package}{Character vector of package names to import.}

\item{python.exec.path}{Single optional character vector specifying the absolute pathways of the executable python file to use (associated to the packages to use). If NULL, the reticulate::import_from_path() function used in python_pkg_check() seeks for an available version of python.exe, and then uses python_config(python_version, required_module, python_versions). But might not be the correct one for the lib.path parameter specified. Thus, it is recommanded to do not leave NULL, notably when using computing clusters.}

\item{lib.path}{Optional character vector specifying the absolute pathways of the directories containing some of the listed packages in the req.package argument, if not in the default directories.}

\item{R.lib.path}{Absolute path of the reticulate packages, if not in the default folders.}
}
\value{
Nothing.
}
\description{
Check if the specified python packages are present in the computer (no import).
}
\details{
REQUIRED PACKAGES

reticulate


REQUIRED FUNCTIONS FROM CUTE_LITTLE_R_FUNCTION

arg_check()

pkg_check()


WARNINGS

for python 3.7. Previous versions return an error "Error in sys$stdout$flush() : attempt to apply non-function"
}
\examples{
# example of error message

# python_pkg_check(req.package = "nopackage")


# example without error message 
# (require the installation of the python serpentine package 
# from https://github.com/koszullab/serpentine

# python_pkg_check(req.package = "serpentine")


# another example of error message

# python_pkg_check(req.package = "serpentine", lib.path = "blablabla")
}
